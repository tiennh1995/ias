$configs: (
  success-rate: (
    svgSize: 70px,
    percentage: 50,
    strokeWidth: 5px,
    backgroundColor: #305556,
    foregroundColor: #d0f09e,
    labelColor: #c6e8d7,
    labelFontSize: 1rem,
    duration: 2s,
    animationDelay: 1s
  ),
  average-return: (
    svgSize: 70px,
    percentage: 25,
    strokeWidth: 5px,
    backgroundColor: #305556,
    foregroundColor: #389967,
    labelColor: #c6e8d7,
    labelFontSize: 1rem,
    duration: 2s,
    animationDelay: 1s
  )
);


/* ------- DO NOT EDIT BELOW --------- */
$pi: 3.14;
$labelData: '';
@for $i from 0 to 101 {
  $labelData: $labelData + $i + '%' + '\a';
}

@each $chart, $param in $configs {
  
  $c: (map-get($param, svgSize) - map-get($param, strokeWidth)) * $pi;
  $cOffSet: (map-get($param, percentage)/100)*$c;
  
  .#{$chart} {
    width: map-get($param, svgSize);
    height: map-get($param, svgSize);
    margin: 0;
    position: relative;
    
    &.animate {
      svg .circle-foreground {
        animation: offset map-get($param, duration) ease-in-out forwards;
        animation-delay: map-get($param, animationDelay);
      }
      figcaption:after {
        animation: #{$chart}-label map-get($param, duration) steps(map-get($param, percentage)) forwards;
        animation-delay: map-get($param, animationDelay);
      }
    }

    svg {
      width: 100%;
      height: 100%;
      .circle-background {
        r: (map-get($param, svgSize) - map-get($param, strokeWidth))/2;
        cx: 50%;
        cy: 50%;
        fill: none;
        stroke: map-get($param, backgroundColor);
        stroke-width: map-get($param, strokeWidth);
      }
      .circle-foreground {
        @extend .circle-background;
        stroke: map-get($param, foregroundColor);
        stroke-dasharray: $cOffSet $c;
        stroke-dashoffset: $cOffSet;
        stroke-linecap: round;
        transform-origin: 50% 50%;
        transform: rotate(-90deg);
      }
    }
    figcaption {
      display: inline-block;
      width: 100%;
      height: map-get($param, labelFontSize);
      overflow: hidden;
      text-align: center;
      color: map-get($param, labelColor);
      position: absolute;
      top: calc(50% - #{map-get($param, labelFontSize)/2});
      left: 0;
      font-size: 0;
      &:after {
        display: inline-block;
        content: $labelData;
        white-space: pre;
        font-size: map-get($param, labelFontSize);
        line-height: map-get($param, labelFontSize);
      }
    }
  }
  @keyframes #{$chart}-label {
    100% {
      transform: translateY(map-get($param, labelFontSize) * (-(map-get($param, percentage))));
    }
  }
}
@keyframes offset {
  100% {
    stroke-dashoffset: 0;
  }
}

/* codepen styling only */
@import url(https://fonts.googleapis.com/css?family=Abel);

figure {
	margin: 1rem!important;
}
figcaption {
	font-family: 'Abel', sans-serif;
}

.clip-star {
  background: gold;
  clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);
  display: inline-block;
  height: 30px;
  width: 30px;
}
.container-ed {
	// border: 1px solid black;
	padding: 20px;
	display: flex;
	height: 700px;
}

.info-ed {
	vertical-align: top;
	display: inline-block;
	background-color: #EEEFFF;
	border: 1px solid #DDDEEE;
	box-shadow: 2px 2px 5px #696868;
	width: 350px;
	height: fit-content;
	margin-right: 20px;
	padding-bottom: 20px;
}

.info-basic-ed {
	border: none;
	box-shadow: 0px 1px #DDDEEE;
	width: 100%;
	height: 200px;
	display: flex;
	margin: 0px;
	padding: 20px 20px 10px 20px; 
}
.info-basic-1-ed {
	padding-left: 10px;
	height: 100%; 
	// background-color: gray;
	display: flex;
	flex-direction: column;
}
.info-basic-1-ed > p {
	flex-grow: 1;
	padding: 0px;
	margin: 0px;
	// border: 1px solid red;
}
.performance-ed {
	// border: 1px solid yellow;
	padding: 10px 20px 20px 20px;
	display: flex;
	height: 180px;

}
.success-rate-ed {
	border: 1px solid blue;
	height: 100%;
	width: 50%;
	margin-right: 10px;
	display: flex;
	flex-direction:  column;
}
.average-return-ed {
	border: 1px solid blue;
	height: 100%;
	width: 50%;
	margin-right: 10px;
	display: flex;
	flex-direction:  column;
}
.success-rate-ed > div {
	// border: 1px solid black;

}
.average-return-ed > div {
	// border: 1px solid black;	
}
.achievements-ed {
	// display: inline-block;
	// width: 700px;
	// height: 700px;
	// flex-grow: 1;
	background-color: #EEEFFF;
	border: 1px solid #DDDEEE;
	box-shadow: 2px 2px 5px #696868;
}
.achievements-title-ed {
	display: flex;
	// border: 1px solid red;

	height: 50px;
	background-color: #454545;
	

}
.achievements-title-ed > p {
	// border: 1px solid black;
	// flex-grow: 1;
	align-self: center;
	margin: 0px;
	text-align: center;
	color: white;
	font-weight: bold; 
	font-size: 17px;
	width: 25%;


}
.container-post-ed {
	display: flex;
	margin-bottom: 10px; 
	border: 1px solid #cccccc;
	background-color: white;
	height: 50px;


}
.container-post-ed > div {
	// border: 1px solid yellow;
	flex-grow: 1;
	align-self: center;
	text-align: center;
}
.btn-follow-ed {
	background-color: lightgreen;
	color: white;
	padding: 10px 0px;
	
	border: none;
	border-radius: 4px;
	cursor: pointer;
	// width: 20%;
}
.btn-follow-ed:hover {
  background-color: #45a049;
}
